name: Release

on:
  push:
    branches: [main, "v*"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: script/test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install MkDocs and Material for MkDocs
        run: pip install mkdocs[i18n] mkdocs-material
      - name: Install Pillow and CairoSVG (required for social card generation)
        run: pip install mkdocs-material
      - name: Release
        id: release
        uses: open-turo/actions-release/semantic-release@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-plugins: |
            @open-turo/semantic-release-config

      - name: Setup caching
        uses: actions/cache@v4
        with:
          key: ${{ github.sha }}
          path: .cache
      - name: Build site (_site directory name is used for Jekyll compatiblity)
        run: mkdocs build --config-file ./mkdocs.yml --site-dir ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      - name: Fetch tags
        if: steps.release.outputs.new-release-published == 'true'
        shell: bash
        run: |
          git fetch --tags
          git clean -fd
      - name: Major branch
        if: steps.release.outputs.new-release-published == 'true'
        uses: open-turo/action-major-release@v1
        with:
          major-version: ${{ steps.release.outputs.new-release-major-version }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
